class Solution {
public:
    bool chk(int x,vector<int>& piles,int h){
        long totalTime=0;
        for(int i=0;i<piles.size();i++)
            totalTime+=ceil(piles[i]/double(x));
        if(totalTime<=h)
            return true;
        else
            return false;
        
    }
    
    
    int minEatingSpeed(vector<int>& piles, int h) {
        if(h<piles.size()) return -1;
        
        int l=1;
        int high=*max_element(piles.begin(),piles.end());
        if(piles.size()==1) return ceil(high/double(h));
        int mid;
        int mini=high;
        while(l<=high){
            mid=(high+l)/2;
            if(chk(mid,piles,h)==true){
                mini=min(mid,mini);
                high=mid-1;
            }
            else {
                l=mid+1;
            }   
        }
        return mini;
        
        
    }
};
